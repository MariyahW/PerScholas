{"version":3,"sources":["node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/helpers/null.js","../../../node_modules/base64-js/index.js","../../../node_modules/ieee754/index.js","../../../node_modules/isarray/index.js","../../../node_modules/buffer/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/classes/Blob.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/common/utils.js","node_modules/axios/lib/platform/index.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","mod1.js","node_modules/@kurkle/color/dist/color.esm.js","../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.ts","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.ts","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js","../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts","node_modules/chart.js/auto/auto.js","mod2.js","mod3.js","script.js","../../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Object","defineProperty","exports","value","default","bind","fn","thisArg","wrap","apply","arguments","_bind","_interopRequireDefault","require","obj","__esModule","toString","prototype","getPrototypeOf","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isBuffer","val","constructor","isFunction","isArrayBuffer","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isBoolean","isPlainObject","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isStream","pipe","isFormData","kind","FormData","append","isURLSearchParams","trim","replace","forEach","allOwnKeys","i","l","length","keys","getOwnPropertyNames","len","key","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","merge","caseless","assignValue","targetKey","extend","a","b","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","assign","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","next","done","pair","matchAll","regExp","matches","exec","push","isHTMLForm","toCamelCase","replacer","m","p1","p2","toUpperCase","hasOwnProperty","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","noop","toFiniteNumber","defaultValue","Number","isFinite","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","then","catch","_default","hasOwnProp","_utils","AxiosError","message","code","config","request","response","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","status","from","error","customProps","axiosError","cause","_AxiosError","_FormData","isVisitable","removeBrackets","renderKey","path","dots","concat","map","each","token","join","isFlatArray","some","predicates","test","toFormData","formData","options","TypeError","PlatformFormData","metaTokens","indexes","defined","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","toISOString","Buffer","JSON","stringify","el","index","exposedHelpers","build","pop","_toFormData","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","_AxiosURLSearchParams","url","serializeFn","serialize","serializedParams","hashmarkIndex","InterceptorManager","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","forEachHandler","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","URLSearchParams","_URLSearchParams","isBrowser","classes","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","_index","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","getOwnPropertyDescriptor","u","platform","toURLEncodedForm","data","helpers","isNode","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","entries","_transitional","_toURLEncodedForm","_formDataToJSON","stringifySafely","rawValue","parser","parse","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","env","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","rawHeaders","parsed","line","substring","_parseHeaders","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","configurable","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","parseHeaders","matcher","delete","deleted","deleteHeader","normalize","format","normalized","targets","asStrings","first","computed","accessor","internals","accessors","defineAccessor","mapped","headerValue","transformData","_AxiosHeaders","fns","transform","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","write","expires","domain","secure","cookie","Date","toGMTString","read","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","_isAbsoluteURL","_combineURLs","requestedURL","standardBrowserEnv","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","isURLSameOrigin","requestURL","nonStandardBrowserEnv","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","startedAt","bytesCount","passed","round","_settle","_cookies","_buildURL","_buildFullPath","_isURLSameOrigin","_CanceledError","_parseProtocol","_speedometer2","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","inRange","progress","estimated","event","isXHRAdapterSupported","XMLHttpRequest","Promise","dispatchXhrRequest","requestData","requestHeaders","withXSRFToken","onCanceled","cancelToken","unsubscribe","signal","removeEventListener","Boolean","auth","username","password","unescape","btoa","fullPath","open","paramsSerializer","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","_resolve","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","cookies","setRequestHeader","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","_http","_xhr","knownAdapters","http","httpAdapter","xhr","xhrAdapter","renderReason","reason","isResolvedHandle","getAdapter","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","dispatchRequest","_transformData","_isCancel","_adapters","throwIfCancellationRequested","throwIfRequested","onAdapterResolution","onAdapterRejection","mergeConfig","headersToObject","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","computeConfigValue","configValue","VERSION","_data","validators","validator","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","_InterceptorManager","_dispatchRequest","_mergeConfig","_validator","Axios","instanceConfig","interceptors","configOrUrl","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","unshiftRequestInterceptors","interceptor","unshift","responseInterceptorChain","pushResponseInterceptors","promise","chain","newConfig","onFulfilled","onRejected","getUri","forEachMethodNoData","forEachMethodWithData","generateHTTPMethod","isForm","httpMethod","CancelToken","executor","resolvePromise","promiseExecutor","_listeners","onfulfilled","splice","c","spread","callback","isAxiosError","payload","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","_Axios","_CancelToken","_spread","_isAxiosError","_HttpStatusCode","createInstance","defaultConfig","instance","axios","Cancel","all","promises","formToJSON","_axios","api_key","createOpt","coin","innerHTML","v","lim","max","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","d","f","hex","h1","h2","eq","isShort","g","hexParse","alpha","hexString","HUE_RE","hsl2rgbn","k","hsv2rgbn","hwb2rgbn","rgb","hueValue","rgb2hsl","range","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","parseInt","names","nameParse","transparent","RGB_RE","rgbParse","rgbString","to","pow","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","uid","isNullOrUndef","isNumberFinite","finiteOrDefault","valueOrDefault","toPercentage","dimension","parseFloat","toDimension","args","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","klen","isValidKey","_merger","tval","sval","sources","merger","current","mergeIf","_mergerIf","_deprecated","scope","previous","keyResolvers","o","y","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","setsEqual","item","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","fraction","niceFraction","_factorize","sqrt","sort","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","_chartjs","listeners","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","clearTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","formatter","Intl","NumberFormat","formatNumber","num","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","getScope","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","translation","fillStyle","textAlign","textBaseline","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","objProps","toTRBL","toTRBLCorners","toPadding","toFont","fallback","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","_getParentNode","domNode","parentNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","listen","cb","reduce","acc","_duration","interpolators","factor","c0","helpersColor","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","rej","resolved","Animations","_properties","configure","animationOptions","animatedProps","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","animator","anim","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_cachedDataOpts","getMeta","_type","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","computeMinSampleSize","_length","curr","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","placed","setLayoutDims","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","_adapter","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_exportNames","_auto","blank","myChart","createLine","priceUsd","clearChart","getPrice","tag1","log","getChange","tag2","changePercent24Hr","getSymbol","tag3","symbol","clearDiv","section","_mod","charting","pricing","_typeof","_regeneratorRuntime","asyncIterator","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","setPrototypeOf","awrap","async","rval","handle","finish","_catch","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","form","querySelector","item4","sect2","_fillForm","_callee","_callee$","fillForm","fillLine","preventDefault","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","appendChild","stackTrace","innerText","getParents","modules","parents","dep","Function","deps"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.5\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","\r\nimport axios from \"axios\";\r\nconst api_key='` 83afe97e-5f1a-495c-931d-45918a68d87c';\r\n\r\nexport default function createOpt(coin){\r\n\r\n    let opt = document.createElement('option');\r\nopt.value=coin.id;\r\nopt.innerHTML=coin.name;\r\n// form.appendChild(opt);\r\nreturn opt;\r\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import Chart from \"chart.js/auto\";\r\n\r\nlet canvas = document.getElementById('price');\r\nlet blank = document.getElementById('blank');\r\nlet myChart;\r\nconst api_key='` 83afe97e-5f1a-495c-931d-45918a68d87c';\r\n\r\n  export  function createLine(response){ \r\nlet data =response.data.data;\r\ndata.forEach(element => {\r\n  element.date=element.date.split('T')[0];\r\n});\r\n\r\n  myChart =new Chart(canvas, {\r\n    type: \"line\",\r\n    options: {color: \"black\"},\r\n   \r\n    data: {\r\n      labels: data.map((row) => row.date),\r\n      \r\n     \r\n      datasets: [\r\n        {\r\n          label: \"Pricing History\",\r\n          data: data.map((row) => row.priceUsd),\r\n          fill: true,\r\n          // backgroundColor:'#989788',\r\n          color: 'black',\r\n        },\r\n      ],\r\n    },\r\n  });\r\n \r\n  }\r\n\r\n  //Clears chart so that it may be used again\r\n  export function clearChart(){\r\n    if(blank.toDataURL()!=canvas.toDataURL()){\r\n        myChart.destroy();\r\n    }\r\n  }","// const sect2 = document.getElementById('list-item-2');\r\n\r\nexport function getPrice(response){\r\n    let data = response.data.data;\r\n    let tag1= document.createElement('h4');\r\n    tag1.innerHTML=`The current price of ${data.name}: ${data.priceUsd}`;\r\n  console.log(data);\r\n    return tag1;\r\n}\r\nexport function getChange(response){\r\n    let data = response.data.data;\r\n    let tag2= document.createElement('h4');\r\n    tag2.innerHTML=`${data.name} 24hr Change: ${data.changePercent24Hr}%`;\r\n   return tag2;\r\n}\r\nexport function getSymbol(response){\r\n    let data = response.data.data;\r\n    let tag3= document.createElement('h4');\r\n    tag3.innerHTML=` ${data.name} symbol: ${data.symbol}`;\r\n   return tag3;\r\n}\r\n\r\nexport function clearDiv(section){\r\nsection.innerHTML='';\r\n}\r\n","\r\nimport axios from \"axios\";\r\n\r\nimport option from \"./mod1.js\";\r\nimport *  as charting from  \"./mod2.js\";\r\nimport * as pricing from \"./mod3.js\";\r\n\r\nconst form = document.querySelector(\"select\");\r\nconst search = document.querySelector('#formButton');\r\nconst item4 = document.getElementById('item4');\r\nconst sect2 = document.getElementById('list-item-2');\r\nconst api_key = `83afe97e-5f1a-495c-931d-45918a68d87c`;\r\n\r\n(async function fillForm() {\r\n  axios.get(`https://api.coincap.io/v2/assets`).then((response) => {\r\n    response.data.data.forEach((coin) => {\r\n      form.append(option(coin));\r\n    });\r\n  });\r\n})();\r\n\r\nform.addEventListener('change',fillLine);\r\nform.addEventListener('change',priceUsd);\r\n\r\n function fillLine(event) {\r\n   event.preventDefault();\r\n   // item4.classList='active';\r\n   // console.log(item4.classList);\r\n   let coin = event.target.value;\r\n  axios.get(`https://api.coincap.io/v2/assets/${coin}/history?interval=d1`)\r\n  .then(res=>{\r\n   charting.clearChart();\r\n  charting.createLine(res);\r\n  \r\n  })\r\n }\r\n function priceUsd(event){\r\n   let coin = event.target.value;\r\n\r\n   axios.get(`https://api.coincap.io/v2/assets/${coin}`)\r\n   .then(response=>{\r\n      pricing.clearDiv(sect2);\r\n      sect2.append(pricing.getPrice(response));\r\n      sect2.append(pricing.getChange(response));\r\n      sect2.append(pricing.getSymbol(response));\r\n   \r\n   })\r\n }\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}